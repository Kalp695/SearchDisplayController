  CGFloat height=IS_IPHONE?self.view.frame.size.height-64-194-50:831;
    

    NSLog(@"%f",WIDTH);
    [scrollView setFrame:CGRectMake(0, 0,WIDTH , height)];
          scrollView.delegate = self;
        [scrollView setBackgroundColor:[UIColor clearColor]];
        [scrollView setCanCancelContentTouches:NO];
        scrollView.indicatorStyle = UIScrollViewIndicatorStyleWhite;
        [scrollView.layer setCornerRadius:4.0];
        [scrollView.layer setBorderColor:NAVBARCLOLOR.CGColor];
        [scrollView.layer setMasksToBounds:true];
        scrollView.clipsToBounds = NO;
        scrollView.scrollEnabled = YES;
        scrollView.pagingEnabled = YES;
    scrollView.tag = 1;
    pageControl.tag=12;
        CGFloat cx = 0;
        for (int i = 0;i<imagesName.count ; i++) {
            UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(cx, 0, WIDTH, height)];
            imageView.image=[UIImage imageNamed:[NSString stringWithFormat:@"%@",[imagesName objectAtIndex:i]]];
            imageView.contentMode=UIViewContentModeCenter;
            imageView.tag=i+1;
            imageView.userInteractionEnabled=true;
            UITapGestureRecognizer *tap=[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(showImage)];
            tap.numberOfTapsRequired=1;
            [imageView addGestureRecognizer:tap];
            CGRect rect = imageView.frame;
            rect.size.height = height;
            rect.size.width = WIDTH;
            rect.origin.x = cx;
            rect.origin.y = 0;
            imageView.frame = rect;
            [scrollView addSubview:imageView];
            cx += WIDTH;
        }
        pageControl.numberOfPages = imagesName.count;
        [scrollView setContentSize:CGSizeMake(cx, height)];




- (void)scrollViewDidScroll:(UIScrollView *)sender {
    // Update the page when more than 50% of the previous/next page is visible
    CGFloat pageWidth = scrollView.frame.size.width;
    int page = floor((scrollView.contentOffset.x - pageWidth / 2) / pageWidth) + 1;
    pageControl.currentPage = page;
    cuttentindex=page;
}


For scrolling images

    [NSTimer scheduledTimerWithTimeInterval:2 target:self selector:@selector(scrollingTimer) userInfo:nil repeats:YES];

- (void)scrollingTimer {
    // access the scroll view with the tag
    UIScrollView *scrMain = (UIScrollView*) [self.view viewWithTag:1];
    // same way, access pagecontroll access
    UIPageControl *pgCtr = (UIPageControl*) [self.view viewWithTag:12];
    // get the current offset ( which page is being displayed )
    CGFloat contentOffset = scrMain.contentOffset.x;
    // calculate next page to display
    int nextPage = (int)(contentOffset/scrMain.frame.size.width) + 1 ;
    // if page is not 10, display it
    if( nextPage!=imagesName.count )  {
        [scrMain scrollRectToVisible:CGRectMake(nextPage*scrMain.frame.size.width, 0, scrMain.frame.size.width, scrMain.frame.size.height) animated:YES];
        pgCtr.currentPage=nextPage;
        // else start sliding form 1 :)
    } else {
        [scrMain scrollRectToVisible:CGRectMake(0, 0, scrMain.frame.size.width, scrMain.frame.size.height) animated:YES];
        pgCtr.currentPage=0;
    }
}




#pragma mark - ImageView Methods
-(void)showImage
{
    JTSImageInfo *imageInfo = [[JTSImageInfo alloc] init];
      imageInfo.image=[UIImage imageNamed:[NSString stringWithFormat:@"%@",[imagesName objectAtIndex:cuttentindex]]];
    imageInfo.referenceView = self.view;
    // Setup view controller
    JTSImageViewController *imageViewer = [[JTSImageViewController alloc]                                           initWithImageInfo:imageInfo mode:JTSImageViewControllerMode_Image                                       backgroundStyle:JTSImageViewControllerBackgroundOption_Blurred];
    // Present the view controller.
    [imageViewer showFromViewController:self transition:JTSImageViewControllerTransition_FromOffscreen];
}

